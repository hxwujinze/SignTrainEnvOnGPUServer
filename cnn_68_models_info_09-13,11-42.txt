data_set_size:37429
accuracy of each sign:
sign 0, accuracy 1.000000 (43 / 43)
sign 1, accuracy 0.967742 (60 / 62)
sign 2, accuracy 1.000000 (41 / 41)
sign 3, accuracy 0.923077 (36 / 39)
sign 4, accuracy 0.938776 (46 / 49)
sign 5, accuracy 0.979167 (47 / 48)
sign 6, accuracy 0.950000 (57 / 60)
sign 7, accuracy 0.974359 (38 / 39)
sign 8, accuracy 1.000000 (27 / 27)
sign 9, accuracy 0.979592 (48 / 49)
sign 10, accuracy 0.967742 (30 / 31)
sign 11, accuracy 1.000000 (42 / 42)
sign 12, accuracy 1.000000 (47 / 47)
sign 13, accuracy 0.939394 (62 / 66)
sign 14, accuracy 0.953488 (41 / 43)
sign 15, accuracy 0.982759 (57 / 58)
sign 16, accuracy 1.000000 (35 / 35)
sign 17, accuracy 0.957447 (45 / 47)
sign 18, accuracy 0.959184 (47 / 49)
sign 19, accuracy 1.000000 (16 / 16)
sign 20, accuracy 1.000000 (34 / 34)
sign 21, accuracy 0.978723 (46 / 47)
sign 22, accuracy 1.000000 (39 / 39)
sign 23, accuracy 1.000000 (40 / 40)
sign 24, accuracy 0.976190 (41 / 42)
sign 25, accuracy 1.000000 (76 / 76)
sign 26, accuracy 1.000000 (51 / 51)
sign 27, accuracy 0.933333 (28 / 30)
sign 28, accuracy 0.967742 (30 / 31)
sign 29, accuracy 1.000000 (30 / 30)
sign 30, accuracy 0.976190 (41 / 42)
sign 31, accuracy 0.964286 (54 / 56)
sign 32, accuracy 1.000000 (48 / 48)
sign 34, accuracy 0.987179 (77 / 78)
sign 36, accuracy 1.000000 (63 / 63)
sign 37, accuracy 1.000000 (26 / 26)
sign 38, accuracy 1.000000 (56 / 56)
sign 40, accuracy 0.500000 (1 / 2)
sign 41, accuracy 1.000000 (28 / 28)
sign 42, accuracy 0.962963 (26 / 27)
sign 44, accuracy 1.000000 (26 / 26)
sign 45, accuracy 1.000000 (19 / 19)
sign 46, accuracy 1.000000 (20 / 20)
sign 49, accuracy 0.977778 (44 / 45)
sign 50, accuracy 1.000000 (50 / 50)
sign 51, accuracy 1.000000 (26 / 26)
sign 52, accuracy 1.000000 (25 / 25)
sign 53, accuracy 1.000000 (23 / 23)
sign 54, accuracy 1.000000 (25 / 25)
sign 55, accuracy 0.966667 (29 / 30)
sign 56, accuracy 1.000000 (52 / 52)
sign 57, accuracy 1.000000 (22 / 22)
sign 58, accuracy 1.000000 (23 / 23)
sign 59, accuracy 1.000000 (33 / 33)
sign 60, accuracy 1.000000 (42 / 42)
sign 61, accuracy 1.000000 (21 / 21)
sign 62, accuracy 1.000000 (17 / 17)
sign 63, accuracy 1.000000 (17 / 17)
sign 64, accuracy 0.937500 (15 / 16)
sign 65, accuracy 0.964286 (27 / 28)
sign 66, accuracy 1.000000 (40 / 40)
sign 67, accuracy 1.000000 (27 / 27)
sign 68, accuracy 0.960000 (24 / 25)
overall accuracy: 0.98242
loss: 0.012981
Epoch: 130
CNN(
  (resnet): ResNet(
    (conv1): Conv1d(14, 64, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
    (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace)
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (blocks): Sequential(
      (0): Sequential(
        (0): BasicBlock(
          (conv1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (conv2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          (bn2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): BasicBlock(
          (conv1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (conv2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          (bn2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Sequential(
        (0): BasicBlock(
          (conv1): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          (bn1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (conv2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv1d(64, 128, kernel_size=(1,), stride=(1,), bias=False)
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          (bn1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (conv2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
          (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (avgpool): AdaptiveAvgPool1d(output_size=2)
  )
  (out): Sequential(
    (0): Dropout(p=0.5)
    (1): LeakyReLU(negative_slope=0.01)
    (2): Linear(in_features=256, out_features=69, bias=True)
  )
)