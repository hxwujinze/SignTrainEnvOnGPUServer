data_set_size:37429
accuracy of each sign:
sign 0, accuracy 1.000000 (57 / 57)
sign 1, accuracy 0.983607 (60 / 61)
sign 2, accuracy 0.878788 (29 / 33)
sign 3, accuracy 1.000000 (32 / 32)
sign 4, accuracy 0.933333 (42 / 45)
sign 5, accuracy 1.000000 (40 / 40)
sign 6, accuracy 0.945455 (52 / 55)
sign 7, accuracy 0.970588 (33 / 34)
sign 8, accuracy 0.933333 (28 / 30)
sign 9, accuracy 1.000000 (41 / 41)
sign 10, accuracy 1.000000 (34 / 34)
sign 11, accuracy 0.971429 (34 / 35)
sign 12, accuracy 0.980769 (51 / 52)
sign 13, accuracy 1.000000 (38 / 38)
sign 14, accuracy 1.000000 (30 / 30)
sign 15, accuracy 0.965517 (56 / 58)
sign 16, accuracy 1.000000 (49 / 49)
sign 17, accuracy 1.000000 (39 / 39)
sign 18, accuracy 0.942308 (49 / 52)
sign 19, accuracy 1.000000 (27 / 27)
sign 20, accuracy 0.970588 (33 / 34)
sign 21, accuracy 1.000000 (46 / 46)
sign 22, accuracy 1.000000 (42 / 42)
sign 23, accuracy 0.959184 (47 / 49)
sign 24, accuracy 1.000000 (34 / 34)
sign 25, accuracy 0.987013 (76 / 77)
sign 26, accuracy 0.982759 (57 / 58)
sign 27, accuracy 0.972973 (36 / 37)
sign 28, accuracy 1.000000 (35 / 35)
sign 29, accuracy 1.000000 (24 / 24)
sign 30, accuracy 1.000000 (30 / 30)
sign 31, accuracy 0.921875 (59 / 64)
sign 32, accuracy 1.000000 (45 / 45)
sign 34, accuracy 0.986667 (74 / 75)
sign 36, accuracy 1.000000 (64 / 64)
sign 37, accuracy 1.000000 (25 / 25)
sign 38, accuracy 1.000000 (51 / 51)
sign 40, accuracy 0.000000 (0 / 1)
sign 41, accuracy 1.000000 (42 / 42)
sign 42, accuracy 0.935484 (29 / 31)
sign 44, accuracy 0.972222 (35 / 36)
sign 45, accuracy 1.000000 (28 / 28)
sign 46, accuracy 1.000000 (28 / 28)
sign 49, accuracy 0.980392 (50 / 51)
sign 50, accuracy 0.972222 (35 / 36)
sign 51, accuracy 1.000000 (24 / 24)
sign 52, accuracy 1.000000 (31 / 31)
sign 53, accuracy 1.000000 (20 / 20)
sign 54, accuracy 0.954545 (21 / 22)
sign 55, accuracy 0.937500 (30 / 32)
sign 56, accuracy 0.966667 (29 / 30)
sign 57, accuracy 1.000000 (26 / 26)
sign 58, accuracy 1.000000 (34 / 34)
sign 59, accuracy 1.000000 (28 / 28)
sign 60, accuracy 1.000000 (31 / 31)
sign 61, accuracy 1.000000 (14 / 14)
sign 62, accuracy 1.000000 (22 / 22)
sign 63, accuracy 1.000000 (24 / 24)
sign 64, accuracy 0.956522 (22 / 23)
sign 65, accuracy 1.000000 (27 / 27)
sign 66, accuracy 1.000000 (52 / 52)
sign 67, accuracy 1.000000 (33 / 33)
sign 68, accuracy 0.967742 (30 / 31)
overall accuracy: 0.98116
loss: 0.022197
Epoch: 100
CNN(
  (resnet): ResNet(
    (conv1): Conv1d(14, 64, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
    (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace)
    (maxpool): MaxPool1d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace)
        (conv2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (bn2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): BasicBlock(
        (conv1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace)
        (conv2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (bn2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv1d(64, 128, kernel_size=(3,), stride=(2,), padding=(1,), bias=False)
        (bn1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace)
        (conv2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): Sequential(
          (0): Conv1d(64, 128, kernel_size=(1,), stride=(2,), bias=False)
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BasicBlock(
        (conv1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (bn1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace)
        (conv2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
        (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (avgpool): AdaptiveAvgPool1d(output_size=2)
  )
  (out): Sequential(
    (0): Dropout(p=0.5)
    (1): LeakyReLU(negative_slope=0.01)
    (2): Linear(in_features=256, out_features=69, bias=True)
  )
)