data_set_size:40607
accuracy of each sign:
sign 0, accuracy 0.988636 (87 / 88)
sign 1, accuracy 0.986111 (71 / 72)
sign 2, accuracy 0.948980 (93 / 98)
sign 3, accuracy 0.960000 (96 / 100)
sign 4, accuracy 0.991228 (113 / 114)
sign 5, accuracy 0.990909 (109 / 110)
sign 6, accuracy 0.985507 (68 / 69)
sign 7, accuracy 0.983607 (60 / 61)
sign 8, accuracy 0.984615 (64 / 65)
sign 9, accuracy 1.000000 (69 / 69)
sign 10, accuracy 1.000000 (73 / 73)
sign 11, accuracy 1.000000 (76 / 76)
sign 12, accuracy 1.000000 (93 / 93)
sign 13, accuracy 0.972222 (105 / 108)
sign 14, accuracy 0.984375 (63 / 64)
sign 15, accuracy 0.988372 (85 / 86)
sign 16, accuracy 0.919355 (57 / 62)
sign 17, accuracy 1.000000 (67 / 67)
sign 18, accuracy 0.946809 (89 / 94)
sign 19, accuracy 1.000000 (42 / 42)
sign 20, accuracy 1.000000 (90 / 90)
sign 21, accuracy 0.984848 (65 / 66)
sign 22, accuracy 0.987013 (76 / 77)
sign 23, accuracy 0.971831 (69 / 71)
sign 24, accuracy 1.000000 (62 / 62)
sign 25, accuracy 0.981707 (161 / 164)
sign 26, accuracy 0.950000 (76 / 80)
sign 27, accuracy 0.963504 (132 / 137)
sign 28, accuracy 0.961832 (126 / 131)
sign 29, accuracy 0.971831 (138 / 142)
sign 30, accuracy 0.977099 (128 / 131)
sign 31, accuracy 0.952381 (120 / 126)
sign 32, accuracy 1.000000 (74 / 74)
sign 34, accuracy 0.977099 (128 / 131)
sign 36, accuracy 0.962025 (76 / 79)
sign 37, accuracy 0.986842 (75 / 76)
sign 38, accuracy 0.965517 (56 / 58)
sign 40, accuracy 1.000000 (24 / 24)
sign 41, accuracy 1.000000 (87 / 87)
sign 42, accuracy 0.989583 (95 / 96)
sign 44, accuracy 1.000000 (16 / 16)
sign 46, accuracy 0.976744 (42 / 43)
sign 49, accuracy 0.977778 (88 / 90)
sign 50, accuracy 1.000000 (59 / 59)
sign 51, accuracy 0.986486 (73 / 74)
sign 52, accuracy 1.000000 (61 / 61)
sign 53, accuracy 0.986301 (72 / 73)
sign 54, accuracy 0.000000 (0 / 6)
sign 55, accuracy 1.000000 (57 / 57)
sign 56, accuracy 1.000000 (54 / 54)
sign 57, accuracy 0.000000 (0 / 26)
sign 58, accuracy 1.000000 (65 / 65)
sign 59, accuracy 1.000000 (34 / 34)
sign 60, accuracy 1.000000 (38 / 38)
sign 61, accuracy 1.000000 (22 / 22)
sign 62, accuracy 1.000000 (21 / 21)
sign 63, accuracy 1.000000 (69 / 69)
sign 64, accuracy 0.857143 (6 / 7)
sign 65, accuracy 1.000000 (44 / 44)
sign 66, accuracy 1.000000 (48 / 48)
sign 67, accuracy 1.000000 (44 / 44)
sign 68, accuracy 1.000000 (47 / 47)
overall accuracy: 0.97495
loss: 3.291123
Epoch: 300
CNN(
  (conv1): Sequential(
    (0): Conv1d(14, 64, kernel_size=(3,), stride=(1,), padding=(1,))
    (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.01)
    (3): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
    (4): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): LeakyReLU(negative_slope=0.01)
    (6): MaxPool1d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (conv2): Sequential(
    (0): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.01)
    (3): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (4): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): LeakyReLU(negative_slope=0.01)
    (6): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
    (7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): LeakyReLU(negative_slope=0.01)
    (9): MaxPool1d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (conv3): Sequential(
    (0): Conv1d(128, 256, kernel_size=(3,), stride=(1,), padding=(1,))
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.01)
    (3): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
    (4): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): LeakyReLU(negative_slope=0.01)
    (6): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
    (7): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): LeakyReLU(negative_slope=0.01)
    (9): MaxPool1d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (out1): Sequential(
    (0): LeakyReLU(negative_slope=0.01)
    (1): Dropout(p=0.5)
    (2): Linear(in_features=1920, out_features=1024, bias=True)
    (3): LeakyReLU(negative_slope=0.01)
    (4): Dropout(p=0.5)
    (5): Linear(in_features=1024, out_features=512, bias=True)
    (6): Tanh()
    (7): Dropout(p=0.5)
    (8): Linear(in_features=512, out_features=69, bias=True)
    (9): Softmax()
  )
)